import { __extends } from "tslib";
import { Injectable } from '@angular/core';
import { IonicNativePlugin, cordova } from '@ionic-native/core';
import { Observable } from 'rxjs';
import * as ɵngcc0 from '@angular/core';
var SpeechRecognition = /** @class */ (function (_super) {
    __extends(SpeechRecognition, _super);
    function SpeechRecognition() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    SpeechRecognition.prototype.isRecognitionAvailable = function () { return cordova(this, "isRecognitionAvailable", {}, arguments); };
    SpeechRecognition.prototype.startListening = function (options) { return cordova(this, "startListening", { "callbackOrder": "reverse", "observable": true }, arguments); };
    SpeechRecognition.prototype.stopListening = function () { return cordova(this, "stopListening", {}, arguments); };
    SpeechRecognition.prototype.getSupportedLanguages = function () { return cordova(this, "getSupportedLanguages", {}, arguments); };
    SpeechRecognition.prototype.hasPermission = function () { return cordova(this, "hasPermission", {}, arguments); };
    SpeechRecognition.prototype.requestPermission = function () { return cordova(this, "requestPermission", {}, arguments); };
    SpeechRecognition.pluginName = "SpeechRecognition";
    SpeechRecognition.plugin = "cordova-plugin-speechrecognition";
    SpeechRecognition.pluginRef = "plugins.speechRecognition";
    SpeechRecognition.repo = "https://github.com/pbakondy/cordova-plugin-speechrecognition";
    SpeechRecognition.platforms = ["Android", "iOS"];
SpeechRecognition.ɵfac = /*@__PURE__*/ function () { var ɵSpeechRecognition_BaseFactory; return function SpeechRecognition_Factory(t) { return (ɵSpeechRecognition_BaseFactory || (ɵSpeechRecognition_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(SpeechRecognition)))(t || SpeechRecognition); }; }();
SpeechRecognition.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SpeechRecognition, factory: function (t) { return SpeechRecognition.ɵfac(t); } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpeechRecognition, [{
        type: Injectable
    }], null, null); })();
    return SpeechRecognition;
}(IonicNativePlugin));
export { SpeechRecognition };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9AaW9uaWMtbmF0aXZlL3BsdWdpbnMvc3BlZWNoLXJlY29nbml0aW9uL25neC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLDhCQUFzQyxNQUFNLG9CQUFvQixDQUFDO0FBQ3hFLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxNQUFNLENBQUM7O0FBQ2xDO0FBRVUsSUF3RzZCLHFDQUFpQjtBQUFDO0FBRTlCO0FBSVA7QUFBTSxJQUF4QixrREFBc0I7QUFNdEIsSUFNQSwwQ0FBYyxhQUFDLE9BQTJDO0FBUXBELElBQU4seUNBQWE7QUFLZ0IsSUFJN0IsaURBQXFCO0FBTVYsSUFHWCx5Q0FBYTtBQU1aLElBR0QsNkNBQWlCO0FBSXFCO0FBQXdEO0FBQW1FO0FBQStEO0FBQTZGO3FEQTFEOVQsVUFBVTs7OzswQkFDTDtBQUFDLDRCQTdHUDtBQUFFLEVBNkdxQyxpQkFBaUI7QUFDdkQsU0FEWSxpQkFBaUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvcmRvdmEsIElvbmljTmF0aXZlUGx1Z2luLCBQbHVnaW4gfSBmcm9tICdAaW9uaWMtbmF0aXZlL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuXG5leHBvcnQgdHlwZSBTcGVlY2hSZWNvZ25pdGlvbkxpc3RlbmluZ09wdGlvbnMgPVxuICB8IFNwZWVjaFJlY29nbml0aW9uTGlzdGVuaW5nT3B0aW9uc0lPU1xuICB8IFNwZWVjaFJlY29nbml0aW9uTGlzdGVuaW5nT3B0aW9uc0FuZHJvaWQ7XG5cbmV4cG9ydCBpbnRlcmZhY2UgU3BlZWNoUmVjb2duaXRpb25MaXN0ZW5pbmdPcHRpb25zSU9TIHtcbiAgLyoqXG4gICAqIHVzZWQgbGFuZ3VhZ2UgZm9yIHJlY29nbml0aW9uIChkZWZhdWx0IGBcImVuLVVTXCJgKVxuICAgKi9cbiAgbGFuZ3VhZ2U/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIHVtYmVyIG9mIHJldHVybiBtYXRjaGVzIChkZWZhdWx0IGA1YClcbiAgICovXG4gIG1hdGNoZXM/OiBudW1iZXI7XG5cbiAgLyoqXG4gICAqIEFsbG93IHBhcnRpYWwgcmVzdWx0cyB0byBiZSByZXR1cm5lZCAoZGVmYXVsdCBgZmFsc2VgKVxuICAgKi9cbiAgc2hvd1BhcnRpYWw/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFNwZWVjaFJlY29nbml0aW9uTGlzdGVuaW5nT3B0aW9uc0FuZHJvaWQge1xuICAvKipcbiAgICogdXNlZCBsYW5ndWFnZSBmb3IgcmVjb2duaXRpb24gKGRlZmF1bHQgYFwiZW4tVVNcImApXG4gICAqL1xuICBsYW5ndWFnZT86IHN0cmluZztcblxuICAvKipcbiAgICogbnVtYmVyIG9mIHJldHVybiBtYXRjaGVzIChtYXhpbXVtIG51bWJlciBvZiBtYXRjaGVzKVxuICAgKi9cbiAgbWF0Y2hlcz86IG51bWJlcjtcblxuICAvKipcbiAgICogZGlzcGxheWVkIHByb21wdCBvZiBsaXN0ZW5lciBwb3B1cCB3aW5kb3dcbiAgICovXG4gIHByb21wdD86IHN0cmluZztcblxuICAvKipcbiAgICogZGlzcGxheSBsaXN0ZW5lciBwb3B1cCB3aW5kb3cgd2l0aCBwcm9tcHQgKGRlZmF1bHQgYHRydWVgKVxuICAgKi9cbiAgc2hvd1BvcHVwPzogYm9vbGVhbjtcblxuICAvKipcbiAgICogQWxsb3cgcGFydGlhbCByZXN1bHRzIHRvIGJlIHJldHVybmVkIChkZWZhdWx0IGBmYWxzZWApXG4gICAqL1xuICBzaG93UGFydGlhbD86IGJvb2xlYW47XG59XG5cbi8qKlxuICogQG5hbWUgU3BlZWNoIFJlY29nbml0aW9uXG4gKiBAZGVzY3JpcHRpb25cbiAqIFRoaXMgcGx1Z2luIGRvZXMgc3BlZWNoIHJlY29nbml0aW9uIHVzaW5nIGNsb3VkIHNlcnZpY2VzXG4gKlxuICogQHVzYWdlXG4gKiBgYGB0eXBlc2NyaXB0XG4gKiBpbXBvcnQgeyBTcGVlY2hSZWNvZ25pdGlvbiB9IGZyb20gJ0Bpb25pYy1uYXRpdmUvc3BlZWNoLXJlY29nbml0aW9uL25neCc7XG4gKlxuICogY29uc3RydWN0b3IocHJpdmF0ZSBzcGVlY2hSZWNvZ25pdGlvbjogU3BlZWNoUmVjb2duaXRpb24pIHsgfVxuICpcbiAqIC4uLlxuICpcbiAqXG4gKlxuICogLy8gQ2hlY2sgZmVhdHVyZSBhdmFpbGFibGVcbiAqIHRoaXMuc3BlZWNoUmVjb2duaXRpb24uaXNSZWNvZ25pdGlvbkF2YWlsYWJsZSgpXG4gKiAgIC50aGVuKChhdmFpbGFibGU6IGJvb2xlYW4pID0+IGNvbnNvbGUubG9nKGF2YWlsYWJsZSkpXG4gKlxuICogLy8gU3RhcnQgdGhlIHJlY29nbml0aW9uIHByb2Nlc3NcbiAqIHRoaXMuc3BlZWNoUmVjb2duaXRpb24uc3RhcnRMaXN0ZW5pbmcob3B0aW9ucylcbiAqICAgLnN1YnNjcmliZShcbiAqICAgICAobWF0Y2hlczogc3RyaW5nW10pID0+IGNvbnNvbGUubG9nKG1hdGNoZXMpLFxuICogICAgIChvbmVycm9yKSA9PiBjb25zb2xlLmxvZygnZXJyb3I6Jywgb25lcnJvcilcbiAqICAgKVxuICpcbiAqIC8vIFN0b3AgdGhlIHJlY29nbml0aW9uIHByb2Nlc3MgKGlPUyBvbmx5KVxuICogdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5zdG9wTGlzdGVuaW5nKClcbiAqXG4gKiAvLyBHZXQgdGhlIGxpc3Qgb2Ygc3VwcG9ydGVkIGxhbmd1YWdlc1xuICogdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5nZXRTdXBwb3J0ZWRMYW5ndWFnZXMoKVxuICogICAudGhlbihcbiAqICAgICAobGFuZ3VhZ2VzOiBzdHJpbmdbXSkgPT4gY29uc29sZS5sb2cobGFuZ3VhZ2VzKSxcbiAqICAgICAoZXJyb3IpID0+IGNvbnNvbGUubG9nKGVycm9yKVxuICogICApXG4gKlxuICogLy8gQ2hlY2sgcGVybWlzc2lvblxuICogdGhpcy5zcGVlY2hSZWNvZ25pdGlvbi5oYXNQZXJtaXNzaW9uKClcbiAqICAgLnRoZW4oKGhhc1Blcm1pc3Npb246IGJvb2xlYW4pID0+IGNvbnNvbGUubG9nKGhhc1Blcm1pc3Npb24pKVxuICpcbiAqIC8vIFJlcXVlc3QgcGVybWlzc2lvbnNcbiAqIHRoaXMuc3BlZWNoUmVjb2duaXRpb24ucmVxdWVzdFBlcm1pc3Npb24oKVxuICogICAudGhlbihcbiAqICAgICAoKSA9PiBjb25zb2xlLmxvZygnR3JhbnRlZCcpLFxuICogICAgICgpID0+IGNvbnNvbGUubG9nKCdEZW5pZWQnKVxuICogICApXG4gKlxuICogYGBgXG4gKi9cbkBQbHVnaW4oe1xuICBwbHVnaW5OYW1lOiAnU3BlZWNoUmVjb2duaXRpb24nLFxuICBwbHVnaW46ICdjb3Jkb3ZhLXBsdWdpbi1zcGVlY2hyZWNvZ25pdGlvbicsXG4gIHBsdWdpblJlZjogJ3BsdWdpbnMuc3BlZWNoUmVjb2duaXRpb24nLFxuICByZXBvOiAnaHR0cHM6Ly9naXRodWIuY29tL3BiYWtvbmR5L2NvcmRvdmEtcGx1Z2luLXNwZWVjaHJlY29nbml0aW9uJyxcbiAgcGxhdGZvcm1zOiBbJ0FuZHJvaWQnLCAnaU9TJ10sXG59KVxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIFNwZWVjaFJlY29nbml0aW9uIGV4dGVuZHMgSW9uaWNOYXRpdmVQbHVnaW4ge1xuICAvKipcbiAgICogQ2hlY2sgZmVhdHVyZSBhdmFpbGFibGVcbiAgICogQHJldHVybiB7UHJvbWlzZTxib29sZWFuPn1cbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgaXNSZWNvZ25pdGlvbkF2YWlsYWJsZSgpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogU3RhcnQgdGhlIHJlY29nbml0aW9uIHByb2Nlc3NcbiAgICogQHJldHVybiB7UHJvbWlzZTwgc3RyaW5nW10gPn0gbGlzdCBvZiByZWNvZ25pemVkIHRlcm1zXG4gICAqL1xuICBAQ29yZG92YSh7XG4gICAgY2FsbGJhY2tPcmRlcjogJ3JldmVyc2UnLFxuICAgIG9ic2VydmFibGU6IHRydWUsXG4gIH0pXG4gIHN0YXJ0TGlzdGVuaW5nKG9wdGlvbnM/OiBTcGVlY2hSZWNvZ25pdGlvbkxpc3RlbmluZ09wdGlvbnMpOiBPYnNlcnZhYmxlPHN0cmluZ1tdPiB7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgLyoqXG4gICAqIFN0b3AgdGhlIHJlY29nbml0aW9uIHByb2Nlc3NcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgc3RvcExpc3RlbmluZygpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogR2V0IHRoZSBsaXN0IG9mIHN1cHBvcnRlZCBsYW5ndWFnZXNcbiAgICogQHJldHVybiB7UHJvbWlzZTwgc3RyaW5nW10gPn0gbGlzdCBvZiBsYW5ndWFnZXNcbiAgICovXG4gIEBDb3Jkb3ZhKClcbiAgZ2V0U3VwcG9ydGVkTGFuZ3VhZ2VzKCk6IFByb21pc2U8c3RyaW5nW10+IHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogQ2hlY2sgcGVybWlzc2lvblxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fSBoYXMgcGVybWlzc2lvblxuICAgKi9cbiAgQENvcmRvdmEoKVxuICBoYXNQZXJtaXNzaW9uKCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICAgIHJldHVybjtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXF1ZXN0IHBlcm1pc3Npb25zXG4gICAqIEByZXR1cm4ge1Byb21pc2U8dm9pZD59XG4gICAqL1xuICBAQ29yZG92YSgpXG4gIHJlcXVlc3RQZXJtaXNzaW9uKCk6IFByb21pc2U8dm9pZD4ge1xuICAgIHJldHVybjtcbiAgfVxufVxuIl19