{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nvar SpeechRecognition = /** @class */function (_super) {\n  __extends(SpeechRecognition, _super);\n  function SpeechRecognition() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  SpeechRecognition.prototype.isRecognitionAvailable = function () {\n    return cordova(this, \"isRecognitionAvailable\", {}, arguments);\n  };\n  SpeechRecognition.prototype.startListening = function (options) {\n    return cordova(this, \"startListening\", {\n      \"callbackOrder\": \"reverse\",\n      \"observable\": true\n    }, arguments);\n  };\n  SpeechRecognition.prototype.stopListening = function () {\n    return cordova(this, \"stopListening\", {}, arguments);\n  };\n  SpeechRecognition.prototype.getSupportedLanguages = function () {\n    return cordova(this, \"getSupportedLanguages\", {}, arguments);\n  };\n  SpeechRecognition.prototype.hasPermission = function () {\n    return cordova(this, \"hasPermission\", {}, arguments);\n  };\n  SpeechRecognition.prototype.requestPermission = function () {\n    return cordova(this, \"requestPermission\", {}, arguments);\n  };\n  SpeechRecognition.pluginName = \"SpeechRecognition\";\n  SpeechRecognition.plugin = \"cordova-plugin-speechrecognition\";\n  SpeechRecognition.pluginRef = \"plugins.speechRecognition\";\n  SpeechRecognition.repo = \"https://github.com/pbakondy/cordova-plugin-speechrecognition\";\n  SpeechRecognition.platforms = [\"Android\", \"iOS\"];\n  SpeechRecognition.ɵfac = /*@__PURE__*/function () {\n    var ɵSpeechRecognition_BaseFactory;\n    return function SpeechRecognition_Factory(t) {\n      return (ɵSpeechRecognition_BaseFactory || (ɵSpeechRecognition_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(SpeechRecognition)))(t || SpeechRecognition);\n    };\n  }();\n  SpeechRecognition.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: SpeechRecognition,\n    factory: function (t) {\n      return SpeechRecognition.ɵfac(t);\n    }\n  });\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpeechRecognition, [{\n      type: Injectable\n    }], null, null);\n  })();\n  return SpeechRecognition;\n}(IonicNativePlugin);\nexport { SpeechRecognition };","map":{"version":3,"names":["__extends","Injectable","IonicNativePlugin","cordova","Observable","ɵngcc0","SpeechRecognition","_super","apply","arguments","prototype","isRecognitionAvailable","startListening","options","stopListening","getSupportedLanguages","hasPermission","requestPermission","pluginName","plugin","pluginRef","repo","platforms","ɵfac","ɵSpeechRecognition_BaseFactory","SpeechRecognition_Factory","t","ɵɵgetInheritedFactory","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type"],"sources":["/home/fixinit/Documentos/desarrollos/RepoGit/codigo-morse/node_modules/@ionic-native/speech-recognition/__ivy_ngcc__/ngx/index.js"],"sourcesContent":["import { __extends } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { IonicNativePlugin, cordova } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nimport * as ɵngcc0 from '@angular/core';\nvar SpeechRecognition = /** @class */ (function (_super) {\n    __extends(SpeechRecognition, _super);\n    function SpeechRecognition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SpeechRecognition.prototype.isRecognitionAvailable = function () { return cordova(this, \"isRecognitionAvailable\", {}, arguments); };\n    SpeechRecognition.prototype.startListening = function (options) { return cordova(this, \"startListening\", { \"callbackOrder\": \"reverse\", \"observable\": true }, arguments); };\n    SpeechRecognition.prototype.stopListening = function () { return cordova(this, \"stopListening\", {}, arguments); };\n    SpeechRecognition.prototype.getSupportedLanguages = function () { return cordova(this, \"getSupportedLanguages\", {}, arguments); };\n    SpeechRecognition.prototype.hasPermission = function () { return cordova(this, \"hasPermission\", {}, arguments); };\n    SpeechRecognition.prototype.requestPermission = function () { return cordova(this, \"requestPermission\", {}, arguments); };\n    SpeechRecognition.pluginName = \"SpeechRecognition\";\n    SpeechRecognition.plugin = \"cordova-plugin-speechrecognition\";\n    SpeechRecognition.pluginRef = \"plugins.speechRecognition\";\n    SpeechRecognition.repo = \"https://github.com/pbakondy/cordova-plugin-speechrecognition\";\n    SpeechRecognition.platforms = [\"Android\", \"iOS\"];\nSpeechRecognition.ɵfac = /*@__PURE__*/ function () { var ɵSpeechRecognition_BaseFactory; return function SpeechRecognition_Factory(t) { return (ɵSpeechRecognition_BaseFactory || (ɵSpeechRecognition_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(SpeechRecognition)))(t || SpeechRecognition); }; }();\nSpeechRecognition.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: SpeechRecognition, factory: function (t) { return SpeechRecognition.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SpeechRecognition, [{\n        type: Injectable\n    }], null, null); })();\n    return SpeechRecognition;\n}(IonicNativePlugin));\nexport { SpeechRecognition };\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}